name: Continuous Delivery

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  continuous-integration:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: "16.13.x"

      - name: Install
        run: |
          npm ci
          npm ls

      - name: "Continuous Integration: lint"
        run: |
          npm run lint --if-present

      - name: "Continuous Integration: build"
        run: |
          npm run build --if-present

      - name: "Continuous Integration: test"
        run: |
          npm run test --if-present

      - name: "Retain build artifact: website"
        uses: actions/upload-artifact@v3
        with:
          name: website
          path: standalone/docusaurus/build/
          retention-days: 1

      - name: "Retain build artifact: Storybook"
        uses: actions/upload-artifact@v3
        with:
          name: storybook
          path: packages/storybook/dist/
          retention-days: 1

      - name: "Retain build artifact: Storybook Vue"
        uses: actions/upload-artifact@v3
        with:
          name: storybook-vue
          path: packages/storybook-vue/dist/
          retention-days: 1

      - name: Publish to Chromatic
        uses: chromaui/action@v1
        if: github.event.pull_request.draft == false
        with:
          autoAcceptChanges: main
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          storybookBuildDir: packages/storybook/dist/

  publish-website:
    runs-on: ubuntu-latest
    needs: continuous-integration
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout release branch
        uses: actions/checkout@v3

      - name: "Restore build artifact: website"
        uses: actions/download-artifact@v3
        with:
          name: website
          path: standalone/docusaurus/build/

      - name: "Restore build artifact: Storybook"
        uses: actions/download-artifact@v3
        with:
          name: storybook
          path: standalone/docusaurus/build/storybook/
      - name: "Restore build artifact: Storybook Vue"
        uses: actions/download-artifact@v3
        with:
          name: storybook-vue
          path: standalone/docusaurus/build/storybook-vue/

      - name: Continuous Deployment to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4.3.0
        with:
          branch: gh-pages
          folder: standalone/docusaurus/build/

      - name: Continuous Deployment to designsystem.utrecht.nl
        uses: JamesIves/github-pages-deploy-action@v4.3.0
        with:
          branch: main
          folder: standalone/docusaurus/build/
          repository-name: nl-design-system/designsystem.utrecht.nl
          token: ${{ secrets.DOCS_GH_TOKEN }}

  publish-npm:
    runs-on: ubuntu-latest
    needs: continuous-integration
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout release branch
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: "16.13.x"

      - name: "Continuous Deployment: install"
        run: |
          npm ci
          npm ls

      - name: "Continuous Deployment: build"
        run: |
          npm run build --if-present

      - name: "Continuous Deployment: publish to GitHub repository"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GIT_AUTHOR_EMAIL: ${{ secrets.GIT_AUTHOR_EMAIL }}
          GIT_AUTHOR_NAME: "NL Design System"
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}
          GIT_COMMITTER_NAME: "NL Design System"
        run: |
          git push --set-upstream origin HEAD
          npm run release -- --yes

      - name: "Continuous Deployment: publish to npm"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm config set "//registry.npmjs.org/:_authToken" "${NPM_TOKEN}"
          npm run publish -- --no-verify-access --yes
          npm config delete "//registry.npmjs.org/:_authToken"
